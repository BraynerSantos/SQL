---I am using SQL to extract information from a database containing multiple tables, in order to generate statistical insights about customer and order data.

-- How many order happened in January 
SELECT count(orderID) FROM  BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';


--How many of those orders were for an iPhone?
SELECT count(orderID) FROM  BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone';


--Select the customer account numbers for all the orders that were placed in February.
SELECT Distinct Customers.acctnum
FROM BIT_DB.FebSales as Feb
LEFT JOIN BIT_DB.Customers as Customers  ON Feb.orderID = Customers.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID';



--Which product was the cheapest one sold in January, and what was the price?
SELECT Product, MIN(price) as price
FROM JanSales
GROUP BY Product, Price
ORDER BY 2 ASC
LIMIT 1;

--What is the total revenue for each product sold in January?
SELECT Product,  Format(Sum(quantity)*price, 'c') as Revenue
FROM  BIT_DB.JanSales
WHERE Product <> ''
GROUP BY Product;



--Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT product, Sum(quantity) as Total_quantity, SUM(quantity)*price as Total
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;


--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(DISTINCT cust.acctnum) as customers, avg(Feb.quantity*Feb.price) as average_spent
FROM BIT_DB.FebSales as Feb
LEFT JOIN BIT_DB.customers as cust 
ON cust.order_id = Feb.orderID
WHERE Feb.quantity > 2
AND length(orderID) = 6
AND orderID <> 'Order ID';
